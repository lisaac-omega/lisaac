Header
  
  + name := MAIN;
  
Private
  
  - add (a,b,c,d, e,f,g,h, i,j,k,l, m,n,o,p:UINTEGER_8) in t:ARRAY UINTEGER_8 <-
  (
    t.add_last a; t.add_last b; t.add_last c; t.add_last d
    t.add_last e; t.add_last f; t.add_last g; t.add_last h
    t.add_last i; t.add_last j; t.add_last k; t.add_last l
    t.add_last m; t.add_last n; t.add_last o; t.add_last p
  )
  
  - text1:STRING_ALIAS := "abc"
  
  - hash1:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (0DDh,0AFh,035h,0A1h,093h,061h,07Ah,0BAh,0CCh,041h,073h,049h,0AEh,020h,041h,031h) in r
    add (012h,0E6h,0FAh,04Eh,089h,0A9h,07Eh,0A2h,00Ah,09Eh,0EEh,0E6h,04Bh,055h,0D3h,09Ah) in r
    add (021h,092h,099h,02Ah,027h,04Fh,0C1h,0A8h,036h,0BAh,03Ch,023h,0A3h,0FEh,0EBh,0BDh) in r
    add (045h,04Dh,044h,023h,064h,03Ch,0E8h,00Eh,02Ah,09Ah,0C9h,04Fh,0A5h,04Ch,0A4h,09Fh) in r
    r
  )
  
  - text2:STRING_ALIAS := "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn\
                          \hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"
                          
  - hash2:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (08Eh,095h,09Bh,075h,0DAh,0E3h,013h,0DAh,08Ch,0F4h,0F7h,028h,014h,0FCh,014h,03Fh) in r
    add (08Fh,077h,079h,0C6h,0EBh,09Fh,07Fh,0A1h,072h,099h,0AEh,0ADh,0B6h,088h,090h,018h) in r
    add (050h,01Dh,028h,09Eh,049h,000h,0F7h,0E4h,033h,01Bh,099h,0DEh,0C4h,0B5h,043h,03Ah) in r
    add (0C7h,0D3h,029h,0EEh,0B6h,0DDh,026h,054h,05Eh,096h,0E5h,05Bh,087h,04Bh,0E9h,009h) in r
    r
  )
  
  - text3:STRING_ALIAS := ""
  
  - hash3:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (0CFh,083h,0E1h,035h,07Eh,0EFh,0B8h,0BDh,0F1h,054h,028h,050h,0D6h,06Dh,080h,007h) in r
    add (0D6h,020h,0E4h,005h,00Bh,057h,015h,0DCh,083h,0F4h,0A9h,021h,0D3h,06Ch,0E9h,0CEh) in r
    add (047h,0D0h,0D1h,03Ch,05Dh,085h,0F2h,0B0h,0FFh,083h,018h,0D2h,087h,07Eh,0ECh,02Fh) in r
    add (063h,0B9h,031h,0BDh,047h,041h,07Ah,081h,0A5h,038h,032h,07Ah,0F9h,027h,0DAh,03Eh) in r
    r
  )
  
  - text4:STRING_ALIAS := "a"
  
  - hash4:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (01Fh,040h,0FCh,092h,0DAh,024h,016h,094h,075h,009h,079h,0EEh,06Ch,0F5h,082h,0F2h) in r
    add (0D5h,0D7h,0D2h,08Eh,018h,033h,05Dh,0E0h,05Ah,0BCh,054h,0D0h,056h,00Eh,00Fh,053h) in r
    add (002h,086h,00Ch,065h,02Bh,0F0h,08Dh,056h,002h,052h,0AAh,05Eh,074h,021h,005h,046h) in r
    add (0F3h,069h,0FBh,0BBh,0CEh,08Ch,012h,0CFh,0C7h,095h,07Bh,026h,052h,0FEh,09Ah,075h) in r
    r
  )
  
  - text5:STRING_ALIAS := "message digest"
  
  - hash5:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (010h,07Dh,0BFh,038h,09Dh,09Eh,09Fh,071h,0A3h,0A9h,05Fh,06Ch,005h,05Bh,092h,051h) in r
    add (0BCh,052h,068h,0C2h,0BEh,016h,0D6h,0C1h,034h,092h,0EAh,045h,0B0h,019h,09Fh,033h) in r
    add (009h,0E1h,064h,055h,0ABh,01Eh,096h,011h,08Eh,08Ah,090h,05Dh,055h,097h,0B7h,020h) in r
    add (038h,0DDh,0B3h,072h,0A8h,098h,026h,004h,06Dh,0E6h,066h,087h,0BBh,042h,00Eh,07Ch) in r
    r
  )
  
  - text6:STRING_ALIAS := "abcdefghijklmnopqrstuvwxyz"
  
  - hash6:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (04Dh,0BFh,0F8h,06Ch,0C2h,0CAh,01Bh,0AEh,01Eh,016h,046h,08Ah,005h,0CBh,098h,081h) in r
    add (0C9h,07Fh,017h,053h,0BCh,0E3h,061h,090h,034h,089h,08Fh,0AAh,01Ah,0ABh,0E4h,029h) in r
    add (095h,05Ah,01Bh,0F8h,0ECh,048h,03Dh,074h,021h,0FEh,03Ch,016h,046h,061h,03Ah,059h) in r
    add (0EDh,054h,041h,0FBh,00Fh,032h,013h,089h,0F7h,07Fh,048h,0A8h,079h,0C7h,0B1h,0F1h) in r
    r
  )
  
  - text7:STRING_ALIAS := "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"
  
  - hash7:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (020h,04Ah,08Fh,0C6h,0DDh,0A8h,02Fh,00Ah,00Ch,0EDh,07Bh,0EBh,08Eh,008h,0A4h,016h) in r
    add (057h,0C1h,06Eh,0F4h,068h,0B2h,028h,0A8h,027h,09Bh,0E3h,031h,0A7h,003h,0C3h,035h) in r
    add (096h,0FDh,015h,0C1h,03Bh,01Bh,007h,0F9h,0AAh,01Dh,03Bh,0EAh,057h,078h,09Ch,0A0h) in r
    add (031h,0ADh,085h,0C7h,0A7h,01Dh,0D7h,003h,054h,0ECh,063h,012h,038h,0CAh,034h,045h) in r
    r
  )
  
  - text8:STRING_ALIAS := "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
  
  - hash8:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (01Eh,007h,0BEh,023h,0C2h,06Ah,086h,0EAh,037h,0EAh,081h,00Ch,08Eh,0C7h,080h,093h) in r
    add (052h,051h,05Ah,097h,00Eh,092h,053h,0C2h,06Fh,053h,06Ch,0FCh,07Ah,099h,096h,0C4h) in r
    add (05Ch,083h,070h,058h,03Eh,00Ah,078h,0FAh,04Ah,090h,004h,01Dh,071h,0A4h,0CEh,0ABh) in r
    add (074h,023h,0F1h,09Ch,071h,0B9h,0D5h,0A3h,0E0h,012h,049h,0F0h,0BEh,0BDh,058h,094h) in r
    r
  )
  
  - text9:STRING_ALIAS := "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
  
  - hash9:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (072h,0ECh,01Eh,0F1h,012h,04Ah,045h,0B0h,047h,0E8h,0B7h,0C7h,05Ah,093h,021h,095h) in r
    add (013h,05Bh,0B6h,01Dh,0E2h,04Eh,0C0h,0D1h,091h,040h,042h,024h,06Eh,00Ah,0ECh,03Ah) in r
    add (023h,054h,0E0h,093h,0D7h,06Fh,030h,048h,0B4h,056h,076h,043h,046h,090h,00Ch,0B1h) in r
    add (030h,0D2h,0A4h,0FDh,05Dh,0D1h,06Ah,0BBh,05Eh,030h,0BCh,0B8h,050h,0DEh,0E8h,043h) in r
    r
  )
  
  - text10:STRING_BUFFER:=
  ( + str:STRING_BUFFER
    + str_alias:STRING_ALIAS
    str := STRING_BUFFER.create 1000
    1000.times { str.add_last 'a'; }
    ? {str.count = 1000}
    str_alias := str.to_string_alias
    ? {(str_alias.occurrences 'a') = 1000}
    str
  )
  
  - hash10:ARRAY UINTEGER_8 :=
  ( + r:ARRAY UINTEGER_8
    r := ARRAY UINTEGER_8.create_with_capacity (SHA512.digest_size)
    add (067h,0bah,055h,035h,0a4h,06eh,03fh,086h,0dbh,0fbh,0edh,08ch,0bbh,0afh,001h,025h) in r
    add (0c7h,06eh,0d5h,049h,0ffh,08bh,00bh,09eh,003h,0e0h,0c8h,08ch,0f9h,00fh,0a6h,034h) in r
    add (0fah,07bh,012h,0b4h,07dh,077h,0b6h,094h,0deh,048h,08ah,0ceh,08dh,09ah,065h,096h) in r
    add (07dh,0c9h,06dh,0f5h,099h,072h,07dh,032h,092h,0a8h,0d9h,0d4h,047h,070h,09ch,097h) in r
    r
  )
  
  - buf:ARRAY UINTEGER_8 := ARRAY UINTEGER_8.create (SHA512.digest_size)
  
  - verify h:ARRAY UINTEGER_8 :BOOLEAN <-
  ( + i:INTEGER
    {(i < SHA512.digest_size) && {buf.at i = h.at i}}.while_do {
      i := i + 1
    }
    i = SHA512.digest_size
  )
  
  
  - test ctx:SHA512 text t:STRING hash h:ARRAY UINTEGER_8 <-
  (
    ctx.reset
    ctx.update_str t
    ctx.sum_in buf
    TEST.check (verify h)
  )
  
  - do_tests_with ctx:SHA512 <-
  ( + old_counter:INTEGER
    old_counter := TEST.counter
    test ctx text text1 hash hash1
    test ctx text text2 hash hash2
    test ctx text text3 hash hash3
    test ctx text text4 hash hash4
    test ctx text text5 hash hash5
    test ctx text text6 hash hash6
    test ctx text text7 hash hash7
    test ctx text text8 hash hash8
    test ctx text text9 hash hash9
    test ctx text text10 hash hash10
    TEST.check (TEST.counter - 10 = old_counter)
  )
  
Public
  
  - main <-
  (
    do_tests_with SHA512
    do_tests_with (SHA512.create)
  )
