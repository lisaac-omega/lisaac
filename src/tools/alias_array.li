Header

  + name    := ALIAS_ARRAY E;

  /*Aliser collection.*/

Inherit

  - parent_any:ANY := ANY

Private

  - bucket:HSET(ARRAY E) :=
  HSET(ARRAY E).create

  - free_list:ARRAY(ARRAY E) :=
  ARRAY(ARRAY E).create_with_capacity 5

  - empty_list:ARRAY E := ARRAY E .create_with_capacity 0

Public

  //
  // Temporary manager.
  //

  - new:ARRAY E <-
  ( + result:ARRAY E

    (free_list.is_empty).if {
      result := ARRAY E .create_with_capacity 16
    } else {
      result := free_list.last
      free_list.remove_last
    }

    result
  )

  - alias tmp:ARRAY E :ARRAY E <-
  ( + result:ARRAY E

    (tmp.is_empty).if {
      result := empty_list
    } else {
      result := bucket.reference_at tmp
      (result = NULL).if {
        result := ARRAY E .create_with_capacity (tmp.count)
        result.copy_collection tmp
        bucket.fast_add result
      }
    }
    free tmp
    result
  )

  - copy tmp:ARRAY E :ARRAY E <-
  ( + result:ARRAY E

    result := ARRAY E .create_with_capacity (tmp.count)
    result.copy_collection tmp
    free tmp
    result
  )

  - free tmp:ARRAY E <-
  (
    tmp.clear
    free_list.add_last tmp
  )



